generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_ATLAS_CONNECTION_STRING")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  isDeleted      Boolean   @default(false)

  accounts Account[]
  journals Journal[]

  sharedJournalIDs String[]  @db.ObjectId
  sharedJournals   Journal[] @relation("sharedJournals", fields: [sharedJournalIDs], references: [id])
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  isDeleted         Boolean @default(false)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Journal {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  publicId  String   @unique @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)

  userId String @db.ObjectId
  owner  User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  sharedWithIDs String[] @db.ObjectId
  sharedWith    User[]   @relation("sharedJournals", fields: [sharedWithIDs], references: [id])

  docs Doc[]
}

model Doc {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)

  journalId String  @db.ObjectId
  journal   Journal @relation(fields: [journalId], references: [id], onDelete: Cascade)
}
